resource "aws_s3_bucket" "bucket_first" {
  bucket = "dashbikash-freetiar-bucket-1"
}

# resource "aws_s3_bucket" "bucket_replica" {
#   bucket = "dashbikash-freetiar-replica"
# }

resource "aws_s3_bucket_lifecycle_configuration" "bucket_lifecycle" {
  bucket = aws_s3_bucket.bucket_first.id

  rule {
    id     = "expire-objects"
    status = "Enabled"
    filter {

    }
    expiration {
      days = 1
    }
  }
}
resource "aws_s3_bucket_public_access_block" "bucket_public_access" {
  bucket = aws_s3_bucket.bucket_first.id

  block_public_acls       = true
  block_public_policy     = false
  ignore_public_acls      = true
  restrict_public_buckets = false
}
resource "aws_s3_bucket_versioning" "bucket_freetiar1_versioning" {
  bucket = aws_s3_bucket.bucket_first.id

  versioning_configuration {
    status = "Enabled"
  }
}
# resource "aws_s3_bucket_versioning" "bucket_replica_versioning" {
#   bucket = aws_s3_bucket.bucket_replica.id

#   versioning_configuration {
#     status = "Enabled"
#   }
# }
resource "aws_s3_bucket_policy" "bucket_policy" {
  bucket = aws_s3_bucket.bucket_first.id

  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Sid" : "Statement1",
        "Effect" : "Allow",
        "Principal" : {
          "AWS" : "arn:aws:iam::678846132305:root"
        },
        "Action" : [
          "s3:GetObject",
        ],
        "Resource" : "arn:aws:s3:::dashbikash-freetiar-bucket-1/*"
      }
    ]
  })
}

# resource "aws_s3_bucket_replication_configuration" "replication" {
#   bucket = aws_s3_bucket.bucket_first.id
#   role   = aws_iam_role.replication_role.arn
#   depends_on = [
#     aws_s3_bucket_versioning.bucket_freetiar1_versioning,
#     aws_s3_bucket_versioning.bucket_replica_versioning
#   ]

#   rule {
#     id     = "replicate-all"
#     status = "Enabled"

#     filter {}

#     delete_marker_replication {
#       status = "Disabled"
#     }

#     destination {
#       bucket        = aws_s3_bucket.bucket_replica.arn
#       storage_class = "STANDARD"
#     }
#   }
# }

# resource "aws_iam_role" "replication_role" {
#   name = "s3-replication-role"

#   assume_role_policy = jsonencode({
#     Version = "2012-10-17"
#     Statement = [
#       {
#         Effect = "Allow"
#         Principal = {
#           Service = "s3.amazonaws.com"
#         }
#         Action = "sts:AssumeRole"
#       }
#     ]
#   })
# }

# resource "aws_iam_role_policy" "replication_policy" {
#   name = "s3-replication-policy"
#   role = aws_iam_role.replication_role.id

#   policy = jsonencode({
#     Version = "2012-10-17"
#     Statement = [
#       {
#         Effect = "Allow"
#         Action = [
#           "s3:GetReplicationConfiguration",
#           "s3:ListBucket"
#         ]
#         Resource = [
#           aws_s3_bucket.bucket_first.arn
#         ]
#       },
#       {
#         Effect = "Allow"
#         Action = [
#           "s3:GetObjectVersion",
#           "s3:GetObjectVersionAcl"
#         ]
#         Resource = [
#           "${aws_s3_bucket.bucket_first.arn}/*"
#         ]
#       },
#       {
#         Effect = "Allow"
#         Action = [
#           "s3:ReplicateObject",
#           "s3:ReplicateDelete",
#           "s3:ReplicateTags"
#         ]
#         Resource = [
#           "${aws_s3_bucket.bucket_replica.arn}/*"
#         ]
#       }
#     ]
#   })
# }